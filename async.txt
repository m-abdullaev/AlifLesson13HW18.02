https://visualstudiomagazine.com/articles/2011/03/24/wccsp_asynchronous-programming.aspx

Асинхронное программирование.
Разбираемся, чем асинхронное программирование отличается от синхронного, зачем оно нужно, и как реализуется асинхронность в разных языках.
Компьютерные программы часто имеют дело с длительными процессами. Например, получают данные из базы или производят сложные вычисления. 
Пока выполняется одна операция, можно было бы завершить еще несколько. А бездействие приводит к снижению продуктивности и убыткам.
Асинхронное программирование увеличивает эффективность, потому что не позволяет блокировать основной поток выполнения.
Тенденции
Асинхронность была всегда, но в последние годы этот стиль разработки стал особенно популярным. 
Все современные языки имеют инструменты для его реализации и постоянно улучшают их. 
Асинхронное программирование
В синхронном коде каждая операция ожидает окончания предыдущей. Поэтому вся программа может зависнуть, если одна из команд выполняется очень долго.

Асинхронный код убирает блокирующую операцию из основного потока программы, так что она продолжает выполняться, но где-то в другом месте, а обработчик может идти дальше. 
Проще говоря, главный "процесс" ставит задачу и передает ее другому независимому "процессу".
Запрос данных
Асинхронное программирование успешно решает множество задач. Одна из самых важных – доступность интерфейса пользователя.

Возьмем для примера приложение, которое подбирает фильм по указанным критериям. 
После того как пользователь выбрал параметры, программа отправляет запрос на сервер. 
А там происходит подбор подходящих картин.